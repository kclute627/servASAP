type Task
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Managers"], queries: null, mutations: [create, update, delete] }
      { allow: groups, groups: ["Employees"], queries: [get, list], mutations: null }
    ]
  ) {
  id: ID!
  title: String!
  description: String
  status: String
}
type Jobs @model{
  id: ID!
  clientName: String
  clientRef: String
  server: String
  caseNumber: String
  plantiff: String
  defendant: String
  courtDate: AWSTimestamp
  courtName: String
  rush: Boolean
  dueDate: AWSTimestamp
  serverInstructions: String
  personServed: String
  serviceAddress: [ServiceAddress]
  altAddress: [AltAddress]
  documents: [Documents]
  invoice: [Invoice]
}

type ServiceAddress {
  fullServiceAddress: String
    street: String
    suite: String
    city: String
    state: String
    zip: String
    lat: String
    lng: String
}
type AltAddress {
  fullServiceAddress: String
    street: String
    suite: String
    city: String
    state: String
    zip: String
    lat: String
    lng: String
}
type Documents {
   description: String
    serviceDocs: [S3Object]
    otherDocs: [S3Object]
}
type Invoice {
  service: String
  description: String
  price: String
  qty: Int 
  total: String
}
type S3Object {
  bucket: String!
  region: String!
  key: String!
}


