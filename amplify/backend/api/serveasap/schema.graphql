type Task
  @model
  {
  id: ID!
  title: String!
  description: String
  status: String
}
type Jobs
  @model
  @auth(rules: [{ allow: owner, identityField: "sub", operations: [create,update,delete] }])
   {
  id: ID!
  status: [String]
  jobNumber: Int
  clientName: String!
  clientRef: String
  server: String
  caseNumber: String
  plantiff: String
  defendant: String
  courtDate: AWSDateTime
  courtName: String
  rush: Boolean
  dueDate: AWSDateTime
  serverInstructions: String
  personServed: String   
  serviceAddress: [ServiceAddress]
  altAddress: [AltAddress]
  documents: [Documents]
  invoice: [Invoice]
}

type ServiceAddress {
  fullServiceAddress: String
  street: String
  suite: String
  city: String
  state: String
  zip: String
  lat: String
  lng: String
}
type AltAddress {
  fullServiceAddress: String
  street: String
  suite: String
  city: String
  state: String
  zip: String
  lat: String
  lng: String
}
type Documents {
  description: String
  serviceDocs: [S3Object]
  otherDocs: [S3Object]
}
type Invoice {
  service: String
  description: String
  price: String
  qty: Int
  total: String
}
type S3Object {
  bucket: String
  region: String
  key: String
}
