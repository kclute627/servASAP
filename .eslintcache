[{"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\index.js":"1","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\App.js":"2","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\reportWebVitals.js":"3","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\aws-exports.js":"4","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Dashboard.js":"5","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Nav.js":"6","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Account.js":"7","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Reports.js":"8","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\AddJob.js":"9","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\Jobs.js":"10","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Reducer\\navReducer.js":"11","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\AddJobForm.js":"12","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Utils\\utils.js":"13","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\InvoiceSection.js":"14","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\JobBtn.js":"15","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\PlacesAutocomplete.js":"16","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\FileDropForm.js":"17"},{"size":734,"mtime":1612924182279,"results":"18","hashOfConfig":"19"},{"size":1169,"mtime":1612923616436,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1606248828867,"results":"21","hashOfConfig":"19"},{"size":213,"mtime":1611861731480,"results":"22","hashOfConfig":"19"},{"size":307,"mtime":1612799693868,"results":"23","hashOfConfig":"19"},{"size":2023,"mtime":1612213702814,"results":"24","hashOfConfig":"19"},{"size":263,"mtime":1612208421887,"results":"25","hashOfConfig":"19"},{"size":242,"mtime":1612208458675,"results":"26","hashOfConfig":"19"},{"size":371,"mtime":1612276353600,"results":"27","hashOfConfig":"19"},{"size":738,"mtime":1612208410794,"results":"28","hashOfConfig":"19"},{"size":601,"mtime":1612198189500,"results":"29","hashOfConfig":"19"},{"size":7995,"mtime":1613013651872,"results":"30","hashOfConfig":"19"},{"size":775,"mtime":1612198189504,"results":"31","hashOfConfig":"19"},{"size":8012,"mtime":1613011657033,"results":"32","hashOfConfig":"19"},{"size":599,"mtime":1612802487020,"results":"33","hashOfConfig":"19"},{"size":10449,"mtime":1612995791444,"results":"34","hashOfConfig":"19"},{"size":4140,"mtime":1613012540406,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"kfvyn0",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\index.js",["78","79","80"],"import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/main.scss'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Amplify from 'aws-amplify' \nimport config from './aws-exports'\nimport { alpha } from '@material-ui/core/styles'\nimport {Helmet} from \"react-helmet\";\n\nAmplify.configure(config)\nrequire('dotenv').config()\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root') \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["81","82"],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\App.js",["83"],"import React, { useReducer, useEffect } from \"react\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport Nav from \"./Components/Nav\";\r\nimport Jobs from \"./Components/Jobs/Jobs\";\r\nimport AddJob from \"./Components/Jobs/AddJob\";\r\nimport Account from \"./Components/Account\";\r\nimport Reports from \"./Components/Reports\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { reducer, initialState } from \"./Reducer/navReducer\";\r\n\r\nconst App = () => {\r\n  const [dashPage, dispatch] = useReducer(reducer, initialState);\r\n  console.log(dashPage.currentPage);\r\n\r\n  useEffect(() => {\r\n   \r\n  }, []); \r\n\r\n  const { currentPage } = dashPage;\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Nav dispatch={dispatch} />\r\n\r\n        <component>\r\n          <Route exact path='/' component={Dashboard} />\r\n          <Route exact path='/jobs' component={Jobs} />\r\n          <Route exact path='/jobs/add' component={AddJob} />\r\n          <Route exact path='/account' component={Account} />\r\n          <Route exact path='/reports' component={Reports} />\r\n        </component>\r\n      </div>{\" \"}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\reportWebVitals.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\aws-exports.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Dashboard.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Nav.js",["84","85"],"import React, { useState, useReducer } from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { grey, purple } from \"@material-ui/core/colors\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport logo from \"../Assets/logo-white.png\";\r\n\r\nimport { navList } from \"../Utils/utils\";\r\n\r\nconst Nav = ({ dispatch }) => {\r\n  const [open, openHandler] = useState(true);\r\n\r\n  return (\r\n    <div className={!open ? \"nav__drawer open\" : \"nav__drawer\"}>\r\n      <div className='nav__drawer-top'>\r\n        <Link to='/'>\r\n          <Avatar\r\n            alt='logo'\r\n            src={logo}\r\n            className={open ? \"avatar-open\" : \"avatar\"}\r\n          />\r\n        </Link>\r\n\r\n        <span></span>\r\n      </div>\r\n      <div className={open ? \"nav__drawer-middle\" : \"nav__drawer-middle mg\"}>\r\n        {navList.map((link) => (\r\n          <Link to={link.link}>\r\n            <li\r\n              className='nav__drawer-items'\r\n              onClick={() => dispatch({ type: `${link.type}` })}\r\n            >\r\n              <SVG\r\n                className='nav__drawer-items-icon'\r\n                src={link.icon}\r\n                title=' '\r\n              />\r\n              {open ? (\r\n                <div className='nav__drawer-items-text'>{link.text}</div>\r\n              ) : null}\r\n            </li>{\" \"}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      <div className='nav__drawer-bottom'>\r\n        <div className='icon'>\r\n          <IconButton onClick={() => openHandler(!open)}>\r\n            {open ? (\r\n              <ChevronLeftIcon fontSize='large' style={{ color: grey[100] }} />\r\n            ) : (\r\n              <ChevronRightIcon fontSize='large' style={{ color: grey[100] }} />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Account.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Reports.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\AddJob.js",["86"],"import React, { useState, useEffect } from \"react\";\r\nimport AddJobForm from \"./AddJobForm\";\r\n\r\nconst AddJob = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <div className=\"addjob\">\r\n      <div className=\"addjob-top\">\r\n        <h1>ADD A JOB</h1>\r\n      </div>\r\n\r\n      <AddJobForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddJob;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\Jobs.js",["87"],"import React, {useEffect} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Jobs = () => {\r\n  useEffect(()=> {\r\n    \r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  \r\n  return (\r\n    <div className=\"jobs\">\r\n      JOBS\r\n      <Link  to=\"/jobs/add\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          endIcon={<CloudUploadIcon />}\r\n          style={{ backgroundColor: \"#123c69\" }}\r\n          className=\"jobs__button\"\r\n         \r\n        >\r\n          Add A Job\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Reducer\\navReducer.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\AddJobForm.js",["88","89","90"],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Utils\\utils.js",["91","92"],"import account from '../Assets/account_circle.svg';\r\nimport dashboard from '../Assets/equalizer.svg'\r\nimport flag from '../Assets/flag.svg'\r\nimport clip from '../Assets/clipboard-text.svg'\r\nimport jobs from '../Assets/paperplane.svg'\r\nimport folder from '../Assets/folder.svg';\r\n\r\n\r\nexport const navList = [\r\n    {\r\n        link: \"/\",\r\n        type: \"dashboard\",\r\n        text: \"Dashboard\",\r\n        icon: clip\r\n      },\r\n      {\r\n        link: \"/jobs\",\r\n        type: \"jobs\",\r\n        text: \"Jobs\",\r\n        icon: jobs\r\n      },\r\n      {\r\n        link: \"/reports\",\r\n        type: \"reports\",\r\n        text: \"Reports\",\r\n        icon: folder\r\n      },\r\n      {\r\n        link: \"/account\",\r\n        type: \"account\",\r\n        text: \"Account\",\r\n        icon: account\r\n      },\r\n\r\n]","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\InvoiceSection.js",["93","94","95"],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\JobBtn.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\PlacesAutocomplete.js",["96","97","98"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nconst PlacesAutocompleteComponent = (props) => {\r\n  const [addAddressBtn, setAddAddressBtn] = useState(false); \r\n  const [address, setAddress] = useState({\r\n    fullAddress: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    suite: \"\",\r\n  });\r\n\r\n  const [altAddress, setAltAddress] = useState({\r\n    fullAddress: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    suite: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setAddress({ ...address, [e.target.name]: e.target.value });\r\n  };\r\n  const handleAutoChange = (fullAddress) => {\r\n    setAddress({ ...address, fullAddress });\r\n  };\r\n  const handleAltAutoChange = (fullAddress) => {\r\n    setAltAddress({ ...address, fullAddress });\r\n  };\r\n\r\n  const handleAltSelect = async (newAddress) => {\r\n    try {\r\n      const results = await geocodeByAddress(newAddress);\r\n      const latLang = await getLatLng(results[0]);\r\n\r\n      console.log(results, \"results\");\r\n\r\n      const resultsArr = results[0].formatted_address.split(\",\");\r\n      console.log(resultsArr[2].split(\" \"), \"result arr\");\r\n\r\n      setAltAddress({\r\n        ...address,\r\n        street: resultsArr[0],\r\n        city: resultsArr[1],\r\n        state: resultsArr[2].split(\" \")[1],\r\n        zip: resultsArr[2].split(\" \")[2],\r\n\r\n        fullAddress: results[0].formatted_address,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleSelect = async (newAddress) => {\r\n    try {\r\n      const results = await geocodeByAddress(newAddress);\r\n      const latLang = await getLatLng(results[0]);\r\n\r\n      console.log(results, \"results\");\r\n\r\n      const resultsArr = results[0].formatted_address.split(\",\");\r\n      console.log(resultsArr[2].split(\" \"), \"result arr\");\r\n\r\n      setAddress({\r\n        ...address,\r\n        street: resultsArr[0],\r\n        city: resultsArr[1],\r\n        state: resultsArr[2].split(\" \")[1],\r\n        zip: resultsArr[2].split(\" \")[2],\r\n\r\n        fullAddress: results[0].formatted_address,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const btnClickHandler = (e) => {\r\n    e.preventDefault();\r\n    setAddAddressBtn(!addAddressBtn);\r\n    setAltAddress({\r\n      fullAddress: \"\",\r\n      street: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n      suite: \"\",\r\n    });\r\n  };\r\n\r\n  const { fullAddress, city, street, zip, state, suite } = address;\r\n\r\n  const addtionalAddress = (\r\n    <div>\r\n      <h4 className='h4'>Alternative Address</h4>\r\n      <PlacesAutocomplete\r\n        value={altAddress.fullAddress}\r\n        onChange={handleAltAutoChange}\r\n        onSelect={handleAltSelect}\r\n        style={{ width: \"100%\" }}\r\n        name='fullAddress'\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => {\r\n          return (\r\n            <div>\r\n              <TextField\r\n                label='Service Address'\r\n                variant='outlined'\r\n                style={{ width: \"100%\" }}\r\n                autoComplete='new-password'\r\n                name='fullAddress'\r\n                {...getInputProps({\r\n                  placeholder: \"Start Typing Service Address\",\r\n                  className: \"location-search-input\",\r\n                  autoComplete: \"new-password\",\r\n                  name: \"fullAddress\",\r\n                })}\r\n              />\r\n\r\n              <div className='autocomplete-dropdown-container'>\r\n                {loading && <div>... Loading </div>}\r\n                {suggestions.map((suggestion) => {\r\n                  const className = suggestion.active\r\n                    ? \"suggestion-item--active\"\r\n                    : \"suggestion-item\";\r\n\r\n                  const style = suggestion.active\r\n                    ? {\r\n                        backgroundColor: \"rgb(202, 202, 202)\",\r\n                        cursor: \"pointer\",\r\n                      }\r\n                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n\r\n                  return (\r\n                    <div\r\n                      className='autocomplete-dropdown'\r\n                      style={{}}\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                        style,\r\n                      })}\r\n                      key={suggestion.description}\r\n                      name='fullAddress'\r\n                    >\r\n                      <span> {suggestion.description} </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </PlacesAutocomplete>\r\n      <div className='form-item' style={{ margin: \"1rem 0\", padding: 0 }}>\r\n        <TextField\r\n          value={altAddress.street}\r\n          name='street'\r\n          id='outlined-basic'\r\n          label='Street'\r\n          variant='outlined'\r\n          style={{ width: \"70%\" }}\r\n          autoComplete='new-password'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <TextField\r\n          id='outlined-basic'\r\n          label='Suite / Apt #'\r\n          variant='outlined'\r\n          value={altAddress.suite}\r\n          name='suite'\r\n          style={{ width: \"25%\" }}\r\n          autoComplete='new-password'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n      </div>\r\n      <div className='form-item' style={{ margin: 0, padding: 0 }}>\r\n        <TextField\r\n          id='outlined-basic'\r\n          name='city'\r\n          label='City'\r\n          value={altAddress.city}\r\n          variant='outlined'\r\n          autoComplete='new-password'\r\n          onChange={(e) => handleChange(e)}\r\n          style={{ width: \"37%\" }}\r\n        />\r\n        <TextField\r\n          id='outlined-basic'\r\n          label='State'\r\n          name='state'\r\n          value={altAddress.state}\r\n          variant='outlined'\r\n          style={{ width: \"37%\" }}\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n\r\n        <TextField\r\n          id='outlined-basic'\r\n          label='Zip'\r\n          name='zip'\r\n          value={altAddress.zip}\r\n          variant='outlined'\r\n          style={{ width: \"25%\" }}\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <PlacesAutocomplete\r\n        value={fullAddress}\r\n        onChange={handleAutoChange}\r\n        onSelect={handleSelect}\r\n        style={{ width: \"100%\" }}\r\n        name='fullAddress'\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => {\r\n          return (\r\n            <div>\r\n              <TextField\r\n                label='Service Address'\r\n                style={{ width: \"100%\" }}\r\n                autoComplete='new-password'\r\n                name='fullAddress'\r\n                variant='outlined' \r\n                {...getInputProps({\r\n                  placeholder: \"Start Typing Service Address\",\r\n                  className: \"location-search-input\",\r\n                  autoComplete: \"new-password\",\r\n                  name: \"fullAddress\",\r\n                })}\r\n              />\r\n\r\n              <div className='autocomplete-dropdown-container'>\r\n                {loading && <div>... Loading </div>}\r\n                {suggestions.map((suggestion) => {\r\n                  const className = suggestion.active\r\n                    ? \"suggestion-item--active\"\r\n                    : \"suggestion-item\";\r\n\r\n                  const style = suggestion.active\r\n                    ? {\r\n                        backgroundColor: \"rgb(202, 202, 202)\",\r\n                        cursor: \"pointer\",\r\n                      }\r\n                    : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n\r\n                  return (\r\n                    <div\r\n                      className='autocomplete-dropdown'\r\n                      style={{}}\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                        style,\r\n                      })}\r\n                      key={suggestion.description}\r\n                      name='fullAddress'\r\n                    >\r\n                      <span> {suggestion.description} </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </PlacesAutocomplete>\r\n      <div className='form-item' style={{ margin: \"1rem 0\", padding: 0 }}>\r\n        <TextField\r\n          value={street}\r\n          name='street'\r\n          id='outlined-basic'\r\n          label='Street'\r\n          variant='outlined'\r\n          style={{ width: \"70%\" }}\r\n          autoComplete='new-password'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        <TextField\r\n          id='outlined-basic'\r\n          label='Suite / Apt #'\r\n          variant='outlined'\r\n          value={suite}\r\n          name='suite'\r\n          style={{ width: \"25%\" }}\r\n          autoComplete='new-password'\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n      </div>\r\n      <div className='form-item' style={{ margin: 0, padding: 0 }}>\r\n        <TextField\r\n          id='outlined-basic'\r\n          name='city'\r\n          label='City'\r\n          value={city}\r\n          variant='outlined'\r\n          autoComplete='new-password'\r\n          onChange={(e) => handleChange(e)}\r\n          style={{ width: \"37%\" }}\r\n        />\r\n        <TextField\r\n          id='outlined-basic'\r\n          label='State'\r\n          name='state'\r\n          value={state}\r\n          variant='outlined'\r\n          style={{ width: \"37%\" }}\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n\r\n        <TextField\r\n          id='outlined-basic'\r\n          label='Zip'\r\n          name='zip'\r\n          value={zip}\r\n          variant='outlined'\r\n          style={{ width: \"25%\" }}\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n      </div>\r\n      {addAddressBtn && addtionalAddress}\r\n      <Button\r\n        onClick={(e) => btnClickHandler(e)}\r\n        style={{ marginTop: \".51rem\" }}\r\n      >\r\n        {!addAddressBtn\r\n          ? \" Add Additional Address\"\r\n          : \"Remove Additional Address\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlacesAutocompleteComponent;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\FileDropForm.js",["99","100","101","102","103","104"],{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"109","line":8,"column":10,"nodeType":"107","messageId":"108","endLine":8,"endColumn":15},{"ruleId":"105","severity":1,"message":"110","line":9,"column":9,"nodeType":"107","messageId":"108","endLine":9,"endColumn":15},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"105","severity":1,"message":"115","line":19,"column":11,"nodeType":"107","messageId":"108","endLine":19,"endColumn":22},{"ruleId":"105","severity":1,"message":"116","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":37},{"ruleId":"105","severity":1,"message":"117","line":7,"column":16,"nodeType":"107","messageId":"108","endLine":7,"endColumn":22},{"ruleId":"105","severity":1,"message":"118","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"119","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"120","line":13,"column":8,"nodeType":"107","messageId":"108","endLine":13,"endColumn":14},{"ruleId":"105","severity":1,"message":"121","line":43,"column":10,"nodeType":"107","messageId":"108","endLine":43,"endColumn":17},{"ruleId":"105","severity":1,"message":"122","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":17},{"ruleId":"105","severity":1,"message":"123","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":12},{"ruleId":"124","severity":1,"message":"125","line":106,"column":6,"nodeType":"126","endLine":106,"endColumn":43,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":201,"column":13,"nodeType":"130","endLine":201,"endColumn":46},{"ruleId":"128","severity":1,"message":"129","line":203,"column":13,"nodeType":"130","endLine":203,"endColumn":26},{"ruleId":"105","severity":1,"message":"106","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"131","line":44,"column":13,"nodeType":"107","messageId":"108","endLine":44,"endColumn":20},{"ruleId":"105","severity":1,"message":"131","line":68,"column":13,"nodeType":"107","messageId":"108","endLine":68,"endColumn":20},{"ruleId":"105","severity":1,"message":"132","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":17},{"ruleId":"105","severity":1,"message":"133","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":22},{"ruleId":"105","severity":1,"message":"134","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":14},{"ruleId":"105","severity":1,"message":"135","line":10,"column":16,"nodeType":"107","messageId":"108","endLine":10,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":63,"column":11,"nodeType":"138","endLine":63,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":82,"column":13,"nodeType":"130","endLine":82,"endColumn":31},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'alpha' is defined but never used.","'Helmet' is defined but never used.","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'currentPage' is assigned a value but never used.","'useReducer' is defined but never used.","'purple' is defined but never used.","'useState' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'company' is assigned a value but never used.","'dashboard' is defined but never used.","'flag' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleInvoice'. Either include it or remove the dependency array.","ArrayExpression",["141"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'latLang' is assigned a value but never used.","'TextField' is defined but never used.","'serviceFiles' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [service, jobDescription, value, qty, handleInvoice]",{"range":"144","text":"145"},[2902,2939],"[service, jobDescription, value, qty, handleInvoice]"]