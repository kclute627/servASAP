[{"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\index.js":"1","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\App.js":"2","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\reportWebVitals.js":"3","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\aws-exports.js":"4","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Dashboard.js":"5","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Nav.js":"6","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Account.js":"7","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Reports.js":"8","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\AddJob.js":"9","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\Jobs.js":"10","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Reducer\\navReducer.js":"11","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\AddJobForm.js":"12","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Utils\\utils.js":"13","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\InvoiceSection.js":"14","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\JobBtn.js":"15","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\PlacesAutocomplete.js":"16","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\FileDropForm.js":"17","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\store.js":"18","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Reducer\\addjobFormReducer.js":"19","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\constants\\addJobConstants.js":"20","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Actions\\addjobActions.js":"21"},{"size":803,"mtime":1613411051652,"results":"22","hashOfConfig":"23"},{"size":1169,"mtime":1612923616436,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1606248828867,"results":"25","hashOfConfig":"23"},{"size":831,"mtime":1613596953535,"results":"26","hashOfConfig":"23"},{"size":307,"mtime":1612799693868,"results":"27","hashOfConfig":"23"},{"size":2023,"mtime":1612213702814,"results":"28","hashOfConfig":"23"},{"size":263,"mtime":1612208421887,"results":"29","hashOfConfig":"23"},{"size":242,"mtime":1612208458675,"results":"30","hashOfConfig":"23"},{"size":371,"mtime":1612276353600,"results":"31","hashOfConfig":"23"},{"size":738,"mtime":1612208410794,"results":"32","hashOfConfig":"23"},{"size":601,"mtime":1612198189500,"results":"33","hashOfConfig":"23"},{"size":24284,"mtime":1613688787277,"results":"34","hashOfConfig":"23"},{"size":775,"mtime":1612198189504,"results":"35","hashOfConfig":"23"},{"size":8610,"mtime":1613530862613,"results":"36","hashOfConfig":"23"},{"size":599,"mtime":1612802487020,"results":"37","hashOfConfig":"23"},{"size":7122,"mtime":1613662876430,"results":"38","hashOfConfig":"23"},{"size":5392,"mtime":1613685623483,"results":"39","hashOfConfig":"23"},{"size":460,"mtime":1613492726267,"results":"40","hashOfConfig":"23"},{"size":4817,"mtime":1613532425507,"results":"41","hashOfConfig":"23"},{"size":1902,"mtime":1613516688651,"results":"42","hashOfConfig":"23"},{"size":417,"mtime":1613414868636,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"kfvyn0",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"47"},"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\index.js",["96","97","98"],"import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./aws-exports\";\nimport { alpha } from \"@material-ui/core/styles\";\nimport { Helmet } from \"react-helmet\";\n\nAmplify.configure(config);\nrequire(\"dotenv\").config();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["99","100"],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\App.js",["101"],"import React, { useReducer, useEffect } from \"react\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport Nav from \"./Components/Nav\";\r\nimport Jobs from \"./Components/Jobs/Jobs\";\r\nimport AddJob from \"./Components/Jobs/AddJob\";\r\nimport Account from \"./Components/Account\";\r\nimport Reports from \"./Components/Reports\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { reducer, initialState } from \"./Reducer/navReducer\";\r\n\r\nconst App = () => {\r\n  const [dashPage, dispatch] = useReducer(reducer, initialState);\r\n  console.log(dashPage.currentPage);\r\n\r\n  useEffect(() => {\r\n   \r\n  }, []); \r\n\r\n  const { currentPage } = dashPage;\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Nav dispatch={dispatch} />\r\n\r\n        <component>\r\n          <Route exact path='/' component={Dashboard} />\r\n          <Route exact path='/jobs' component={Jobs} />\r\n          <Route exact path='/jobs/add' component={AddJob} />\r\n          <Route exact path='/account' component={Account} />\r\n          <Route exact path='/reports' component={Reports} />\r\n        </component>\r\n      </div>{\" \"}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\reportWebVitals.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\aws-exports.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Dashboard.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Nav.js",["102","103"],"import React, { useState, useReducer } from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { grey, purple } from \"@material-ui/core/colors\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport logo from \"../Assets/logo-white.png\";\r\n\r\nimport { navList } from \"../Utils/utils\";\r\n\r\nconst Nav = ({ dispatch }) => {\r\n  const [open, openHandler] = useState(true);\r\n\r\n  return (\r\n    <div className={!open ? \"nav__drawer open\" : \"nav__drawer\"}>\r\n      <div className='nav__drawer-top'>\r\n        <Link to='/'>\r\n          <Avatar\r\n            alt='logo'\r\n            src={logo}\r\n            className={open ? \"avatar-open\" : \"avatar\"}\r\n          />\r\n        </Link>\r\n\r\n        <span></span>\r\n      </div>\r\n      <div className={open ? \"nav__drawer-middle\" : \"nav__drawer-middle mg\"}>\r\n        {navList.map((link) => (\r\n          <Link to={link.link}>\r\n            <li\r\n              className='nav__drawer-items'\r\n              onClick={() => dispatch({ type: `${link.type}` })}\r\n            >\r\n              <SVG\r\n                className='nav__drawer-items-icon'\r\n                src={link.icon}\r\n                title=' '\r\n              />\r\n              {open ? (\r\n                <div className='nav__drawer-items-text'>{link.text}</div>\r\n              ) : null}\r\n            </li>{\" \"}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      <div className='nav__drawer-bottom'>\r\n        <div className='icon'>\r\n          <IconButton onClick={() => openHandler(!open)}>\r\n            {open ? (\r\n              <ChevronLeftIcon fontSize='large' style={{ color: grey[100] }} />\r\n            ) : (\r\n              <ChevronRightIcon fontSize='large' style={{ color: grey[100] }} />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Account.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Reports.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\AddJob.js",["104"],"import React, { useState, useEffect } from \"react\";\r\nimport AddJobForm from \"./AddJobForm\";\r\n\r\nconst AddJob = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <div className=\"addjob\">\r\n      <div className=\"addjob-top\">\r\n        <h1>ADD A JOB</h1>\r\n      </div>\r\n\r\n      <AddJobForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddJob;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\Jobs.js",["105"],"import React, {useEffect} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Jobs = () => {\r\n  useEffect(()=> {\r\n    \r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  \r\n  return (\r\n    <div className=\"jobs\">\r\n      JOBS\r\n      <Link  to=\"/jobs/add\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          endIcon={<CloudUploadIcon />}\r\n          style={{ backgroundColor: \"#123c69\" }}\r\n          className=\"jobs__button\"\r\n         \r\n        >\r\n          Add A Job\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Reducer\\navReducer.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\AddJobForm.js",["106","107","108","109","110","111"],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Utils\\utils.js",["112","113"],"import account from '../Assets/account_circle.svg';\r\nimport dashboard from '../Assets/equalizer.svg'\r\nimport flag from '../Assets/flag.svg'\r\nimport clip from '../Assets/clipboard-text.svg'\r\nimport jobs from '../Assets/paperplane.svg'\r\nimport folder from '../Assets/folder.svg';\r\n\r\n\r\nexport const navList = [\r\n    {\r\n        link: \"/\",\r\n        type: \"dashboard\",\r\n        text: \"Dashboard\",\r\n        icon: clip\r\n      },\r\n      {\r\n        link: \"/jobs\",\r\n        type: \"jobs\",\r\n        text: \"Jobs\",\r\n        icon: jobs\r\n      },\r\n      {\r\n        link: \"/reports\",\r\n        type: \"reports\",\r\n        text: \"Reports\",\r\n        icon: folder\r\n      },\r\n      {\r\n        link: \"/account\",\r\n        type: \"account\",\r\n        text: \"Account\",\r\n        icon: account\r\n      },\r\n\r\n]","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\InvoiceSection.js",["114","115","116","117","118"],"import React, { useState, useEffect } from \"react\";\r\nimport JobsBtn from \"./JobBtn\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport {\r\n  ADD_JOB_FORM_INVOICE,\r\n  ADD_JOB_FORM_INVOICE_DELETE,\r\n} from \"../../constants/addJobConstants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFormData } from \"../../Actions/addjobActions\";\r\n\r\n// todo - make delete work with redux\r\n\r\nconst services = [\r\n  \"Service of Process\",\r\n  \"Witness Fee\",\r\n  \"Investigations\",\r\n  \"ASAP Rush Serve\",\r\n  \"Document Retrieval\",\r\n];\r\n\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      decimalScale={2}\r\n      fixedDecimalScale\r\n      isNumericString\r\n      prefix='$'\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst InvoiceSection = (props) => {\r\n  const [service, setService] = useState(\"Service of Process\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [jobDescription, setJobDescription] = useState(\"\");\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  let formData = useSelector((state) => state.setFormData);\r\n\r\n  const handleChange = (event) => {\r\n    setService(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const listener = (event) => {\r\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n        console.log(\r\n          \"Enter key was pressed. Run your function.\",\r\n          service,\r\n          jobDescription,\r\n          value,\r\n          qty\r\n        );\r\n        // callMyFunction();\r\n\r\n        if (value && jobDescription) {\r\n          handleInvoice(service, jobDescription, value, qty);\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, [service, jobDescription, value, qty]);\r\n\r\n  const handleInvoice = (service, description, price, qty) => {\r\n    let total = price * qty;\r\n\r\n    total = formatter.format(total);\r\n    const invoiceInfo = {\r\n      service,\r\n      description,\r\n      price,\r\n      qty,\r\n      total,\r\n    };\r\n\r\n    dispatch(setFormData(invoiceInfo, ADD_JOB_FORM_INVOICE));\r\n\r\n    setService(\"\");\r\n    setValue(\"\");\r\n    setQty(1);\r\n    setJobDescription(\"\");\r\n  };\r\n  const handleDelete = (id) => {\r\n    const oldRows = [...formData.invoice];\r\n\r\n    const newRows = oldRows.filter((row, i) => row.description !== id);\r\n\r\n    dispatch(setFormData(newRows, ADD_JOB_FORM_INVOICE_DELETE));\r\n  };\r\n\r\n  return (\r\n    <div className='invoice__container'>\r\n      <div className='invoice'>\r\n        <div className='invoice-top'>\r\n          <h3>Invoice </h3>\r\n          <div className='invoice-span'></div>\r\n          <div className='invoice-item'>\r\n            <FormControl style={{ width: \"25%\" }}>\r\n              <InputLabel id='demo-mutiple-name-label'>Service Name</InputLabel>\r\n              <Select\r\n                labelId='demo-mutiple-name-label'\r\n                id='demo-mutiple-name'\r\n                value={service}\r\n                onChange={handleChange}\r\n                input={<Input />}\r\n              >\r\n                {services.map((service) => (\r\n                  <MenuItem key={service} value={service}>\r\n                    {service}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              value={jobDescription}\r\n              onChange={(dec) => setJobDescription(dec.target.value)}\r\n              label='Description'\r\n              style={{ width: \"45%\" }}\r\n              placeholder='Description'\r\n              variant='standard'\r\n            />\r\n            <TextField\r\n              label='Qty'\r\n              variant='standard'\r\n              type='number'\r\n              value={qty}\r\n              style={{ width: \"5%\" }}\r\n              onChange={(val) => setQty(val.target.value)}\r\n            />\r\n            <TextField\r\n              label='Price'\r\n              id='price'\r\n              style={{ width: \"10%\" }}\r\n              value={value.numberformat}\r\n              onChange={(val) => setValue(val.target.value)}\r\n              name='numberformat'\r\n              id='formatted-numberformat-input'\r\n              variant='standard'\r\n              value={value}\r\n              InputProps={{\r\n                inputComponent: NumberFormatCustom,\r\n              }}\r\n            />\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              id='addInvoice'\r\n              color='primary'\r\n              disabled={!value}\r\n              onClick={() => handleInvoice(service, jobDescription, value, qty)}\r\n            >\r\n              Add\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className='invoice-bottom'>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Service</TableCell>\r\n                  <TableCell align='left'>Description</TableCell>\r\n                  <TableCell align='right'>Qty.</TableCell>\r\n                  <TableCell align='right'>Price</TableCell>\r\n                  <TableCell align='right'>Total</TableCell>\r\n                  <TableCell align='right'></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {formData.invoice.map((row, i) => (\r\n                  <TableRow key={i}>\r\n                    <TableCell align='left'>{row.service}</TableCell>\r\n                    <TableCell align='left'>{row.description}</TableCell>\r\n                    <TableCell align='right'>{row.qty}</TableCell>\r\n                    <TableCell align='right'>${row.price}</TableCell>\r\n                    <TableCell align='right'>${row.total}</TableCell>\r\n                    <TableCell align='left'>\r\n                      <IconButton onClick={() => handleDelete(row.description)}>\r\n                        <HighlightOffIcon\r\n                          style={{\r\n                            color: \"rgb(194, 13, 13)\",\r\n                            margin: \"0 auto\",\r\n                          }}\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n\r\n                <TableRow>\r\n                  <TableCell align='right' colSpan={4}>\r\n                    Total\r\n                  </TableCell>\r\n                  <TableCell align='right'>\r\n                    $\r\n                    {\r\n                      formData.invoice.reduce((a, { total }) => {\r\n                        total = total.replace(\",\", \"\");\r\n                        a = a.replace(\",\", \"\");\r\n\r\n                        let newTotal = parseFloat(a) + parseFloat(total);\r\n\r\n                        newTotal = formatter.format(newTotal);\r\n\r\n                        return newTotal;\r\n                      }, \"0\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n      <JobsBtn />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvoiceSection;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\JobBtn.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\PlacesAutocomplete.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Components\\Jobs\\FileDropForm.js",["134","135","136","137","138","139","140"],"import React, { useState, useEffect } from \"react\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  ADD_JOB_FORM_OTHERDOCS,\r\n  ADD_JOB_FORM_SERVICE_DOCUMENTS,\r\n  ADD_JOB_FORM_SERVICE_DOCUMENTS_DESCRIPTION,\r\n} from \"../../constants/addJobConstants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFormData } from \"../../Actions/addjobActions\";\r\n\r\nconst FileDropForm = () => {\r\n  const [serviceFiles, setServiceFiles] = useState([]);\r\n  const [otherFiles, setOtherFiles] = useState([]);\r\n  \r\n  const [numberOfFiles, setNumberOfFiles] = useState(serviceFiles.length)  \r\n  const dispatch = useDispatch();\r\n  let formData = useSelector((state) => state.setFormData);\r\n\r\n\r\n  const commonDocuments = [\r\n    \"Summons\",\r\n    \"Complaint\",\r\n    \"Subpoena\",\r\n    \"Subpoena to Testify\",\r\n    \"Subpoena for Deposition\",\r\n    \"Subpoena to Produce Documents\",\r\n    \"Exhibits\",\r\n  ];\r\n\r\n  const useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n      root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n        marginTop: \"1rem\",\r\n        padding: \"1rem .5rem\",\r\n        \"& > *\": {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n\r\n      previewChip: {\r\n        minWidth: 260,\r\n        maxWidth: 410,\r\n        backgroundColor: \"#ededed\",\r\n      },\r\n    })\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChip = (text) => {\r\n    if (formData.documents.description.length === 0) {\r\n      return   dispatch(setFormData(text, ADD_JOB_FORM_SERVICE_DOCUMENTS_DESCRIPTION ))\r\n      \r\n    }\r\n\r\n    let newDescription = `${formData.documents.description}; ${text}`;\r\n    dispatch(setFormData(newDescription, ADD_JOB_FORM_SERVICE_DOCUMENTS_DESCRIPTION ))\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(setFormData(e.target.value, ADD_JOB_FORM_SERVICE_DOCUMENTS_DESCRIPTION ))\r\n  };\r\n  const handleDocuments = (file, type) => {\r\n    /// look into amplyfy s3 storage // combine pdf's\r\n\r\n    if (type === ADD_JOB_FORM_OTHERDOCS) {\r\n      return setOtherFiles(file);\r\n    }\r\n\r\n    setServiceFiles(file);\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Documents to Be Served</h3>\r\n      <div className='form-group-span'></div>\r\n      <div className='form-item' style={{ margin: 0 }}>\r\n        <div style={{ width: \"100%\", marginTop: \"1.25rem\" }}>\r\n          {/* //Make Clickable Chips With common Documents // then make field where you can add new Chips */}\r\n          <h4>\r\n            Common Documents - Click All That Apply or Start Typing Below{\" \"}\r\n          </h4>\r\n          <h5></h5>\r\n          <Paper component='ul' className={classes.root}>\r\n            {commonDocuments.map((doc, i) => (\r\n              <Chip\r\n                label={doc}\r\n                color='primary'\r\n                key={i}\r\n                clickable\r\n                onClick={() => handleChip(doc)}\r\n              />\r\n            ))}\r\n          </Paper>\r\n          <textarea\r\n            style={{ width: \"97%\", height: \"5rem\", margin: \"1rem 0\", fontSize: '1.1rem', fontWeight: 700 }}\r\n            name=''\r\n            id=''\r\n            placeholder='Documents To Be Served (As You Want Them To Appear on the Affidavit)'\r\n            className='form-textarea'\r\n            value={formData.documents.description}\r\n            name='description'\r\n            onChange={handleChange}\r\n          ></textarea>\r\n          <DropzoneArea\r\n            className='dropZone'\r\n            onChange={(files) =>\r\n              handleDocuments(files, ADD_JOB_FORM_SERVICE_DOCUMENTS)\r\n            }\r\n            dropzoneText='Drag or Click To Add All Service Documents'\r\n            showPreviews={true}\r\n            showPreviewsInDropzone={false}\r\n            filesLimit={14}\r\n            maxFileSize={5000000}\r\n            useChipsForPreview\r\n            previewGridProps={{ container: { spacing: 1, direction: \"row\" } }}\r\n            previewChipProps={{ classes: { root: classes.previewChip } }}\r\n            previewText='Documents For Service'\r\n          />\r\n          {/* {create TextForm Where I Can Name the Docuemt}  Also make user friendly for people who do not load documents   */}\r\n        </div>\r\n      </div>\r\n      <h3 style={{ marginTop: \"2rem\" }}>\r\n        Other Docs - Pictures, Signed Proofs, etc.\r\n      </h3>\r\n      <div className='form-group-span' style={{ marginBottom: \"2rem\" }}></div>\r\n\r\n      <div className='form-item' style={{ margin: 0 }}>\r\n        <div style={{ width: \"100%\", marginTop: \"1.25rem\" }}>\r\n          <DropzoneArea\r\n            className='dropZone'\r\n            onChange={(files) => handleDocuments(files, ADD_JOB_FORM_OTHERDOCS)}\r\n            dropzoneText='Drag or Click To Add Other Docs'\r\n            showPreviews={true}\r\n            showPreviewsInDropzone={false}\r\n            filesLimit={3}\r\n            maxFileSize={5000000}\r\n            useChipsForPreview\r\n            previewGridProps={{\r\n              container: { spacing: 1, direction: \"row\" },\r\n            }}\r\n            previewChipProps={{ classes: { root: classes.previewChip } }}\r\n            previewText='Other Documents'\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileDropForm;\r\n","C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\store.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Reducer\\addjobFormReducer.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\constants\\addJobConstants.js",[],"C:\\Users\\Kyles PC\\Desktop\\Coding\\serveasap\\src\\Actions\\addjobActions.js",["141","142","143","144"],"import {\r\n  ADD_JOB_FORM_DATA,\r\n  ADD_JOB_FORM_SERVICE_DOCUMENTS_DESCRIPTION,\r\n  ADD_JOB_FORM_CASENUMBER,\r\n  ADD_JOB_FORM_CLIENTNAME,\r\n} from \"../constants/addJobConstants\";\r\n\r\n\r\nexport const setFormData= (info, TYPE) => async(dispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: TYPE,\r\n            payload: info,\r\n        })\r\n        \r\n    } catch (error) {\r\n        /// DISPATCH ERROR \r\n    }\r\n\r\n\r\n\r\n}",{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"149","line":10,"column":10,"nodeType":"147","messageId":"148","endLine":10,"endColumn":15},{"ruleId":"145","severity":1,"message":"150","line":11,"column":10,"nodeType":"147","messageId":"148","endLine":11,"endColumn":16},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"145","severity":1,"message":"155","line":19,"column":11,"nodeType":"147","messageId":"148","endLine":19,"endColumn":22},{"ruleId":"145","severity":1,"message":"156","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":37},{"ruleId":"145","severity":1,"message":"157","line":7,"column":16,"nodeType":"147","messageId":"148","endLine":7,"endColumn":22},{"ruleId":"145","severity":1,"message":"158","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"159","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":12},{"ruleId":"145","severity":1,"message":"146","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"160","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":483,"column":17,"nodeType":"163","endLine":483,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":533,"column":15,"nodeType":"163","endLine":533,"endColumn":40},{"ruleId":"164","severity":1,"message":"165","line":695,"column":13,"nodeType":"166","endLine":695,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":720,"column":15,"nodeType":"163","endLine":720,"endColumn":33},{"ruleId":"145","severity":1,"message":"167","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"168","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":12},{"ruleId":"145","severity":1,"message":"169","line":79,"column":10,"nodeType":"147","messageId":"148","endLine":79,"endColumn":14},{"ruleId":"145","severity":1,"message":"170","line":79,"column":16,"nodeType":"147","messageId":"148","endLine":79,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":109,"column":6,"nodeType":"173","endLine":109,"endColumn":43,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"162","line":184,"column":15,"nodeType":"163","endLine":184,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":186,"column":15,"nodeType":"163","endLine":186,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"175","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":20},{"ruleId":"145","severity":1,"message":"176","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"177","line":23,"column":19,"nodeType":"147","messageId":"148","endLine":23,"endColumn":29},{"ruleId":"145","severity":1,"message":"178","line":48,"column":9,"nodeType":"147","messageId":"148","endLine":48,"endColumn":25},{"ruleId":"145","severity":1,"message":"179","line":60,"column":13,"nodeType":"147","messageId":"148","endLine":60,"endColumn":20},{"ruleId":"145","severity":1,"message":"180","line":81,"column":9,"nodeType":"147","messageId":"148","endLine":81,"endColumn":21},{"ruleId":"145","severity":1,"message":"181","line":110,"column":9,"nodeType":"147","messageId":"148","endLine":110,"endColumn":24},{"ruleId":"145","severity":1,"message":"182","line":123,"column":11,"nodeType":"147","messageId":"148","endLine":123,"endColumn":29},{"ruleId":"145","severity":1,"message":"183","line":123,"column":31,"nodeType":"147","messageId":"148","endLine":123,"endColumn":35},{"ruleId":"145","severity":1,"message":"184","line":123,"column":37,"nodeType":"147","messageId":"148","endLine":123,"endColumn":43},{"ruleId":"145","severity":1,"message":"185","line":123,"column":45,"nodeType":"147","messageId":"148","endLine":123,"endColumn":48},{"ruleId":"145","severity":1,"message":"186","line":123,"column":50,"nodeType":"147","messageId":"148","endLine":123,"endColumn":55},{"ruleId":"145","severity":1,"message":"187","line":123,"column":57,"nodeType":"147","messageId":"148","endLine":123,"endColumn":62},{"ruleId":"145","severity":1,"message":"188","line":125,"column":9,"nodeType":"147","messageId":"148","endLine":125,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"189","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":17},{"ruleId":"145","severity":1,"message":"190","line":17,"column":10,"nodeType":"147","messageId":"148","endLine":17,"endColumn":20},{"ruleId":"145","severity":1,"message":"191","line":19,"column":10,"nodeType":"147","messageId":"148","endLine":19,"endColumn":23},{"ruleId":"145","severity":1,"message":"192","line":19,"column":25,"nodeType":"147","messageId":"148","endLine":19,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":91,"column":11,"nodeType":"166","endLine":91,"endColumn":15},{"ruleId":"161","severity":1,"message":"162","line":110,"column":13,"nodeType":"163","endLine":110,"endColumn":31},{"ruleId":"145","severity":1,"message":"193","line":2,"column":3,"nodeType":"147","messageId":"148","endLine":2,"endColumn":20},{"ruleId":"145","severity":1,"message":"194","line":3,"column":3,"nodeType":"147","messageId":"148","endLine":3,"endColumn":45},{"ruleId":"145","severity":1,"message":"195","line":4,"column":3,"nodeType":"147","messageId":"148","endLine":4,"endColumn":26},{"ruleId":"145","severity":1,"message":"196","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":5,"endColumn":26},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'alpha' is defined but never used.","'Helmet' is defined but never used.","no-native-reassign",["197"],"no-negated-in-lhs",["198"],"'currentPage' is assigned a value but never used.","'useReducer' is defined but never used.","'purple' is defined but never used.","'useState' is defined but never used.","'Icon' is defined but never used.","'FileDropForm' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'dashboard' is defined but never used.","'flag' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleInvoice'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'Autocomplete' is defined but never used.","'Button' is defined but never used.","'setAddress' is assigned a value but never used.","'handleAutoChange' is assigned a value but never used.","'latLang' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'btnClickHandler' is assigned a value but never used.","'fullServiceAddress' is assigned a value but never used.","'city' is assigned a value but never used.","'street' is assigned a value but never used.","'zip' is assigned a value but never used.","'state' is assigned a value but never used.","'suite' is assigned a value but never used.","'addtionalAddress' is assigned a value but never used.","'TextField' is defined but never used.","'otherFiles' is assigned a value but never used.","'numberOfFiles' is assigned a value but never used.","'setNumberOfFiles' is assigned a value but never used.","'ADD_JOB_FORM_DATA' is defined but never used.","'ADD_JOB_FORM_SERVICE_DOCUMENTS_DESCRIPTION' is defined but never used.","'ADD_JOB_FORM_CASENUMBER' is defined but never used.","'ADD_JOB_FORM_CLIENTNAME' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},"Update the dependencies array to be: [service, jobDescription, value, qty, handleInvoice]",{"range":"202","text":"203"},[3261,3298],"[service, jobDescription, value, qty, handleInvoice]"]